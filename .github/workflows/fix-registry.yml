name: Fix Registry Authentication

on:
  workflow_dispatch:

jobs:
  fix-registry:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup DigitalOcean CLI
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_ACCESS_TOKEN }}

      - name: Fix Registry Credentials
        run: |
          echo "🔧 Fixing DigitalOcean Container Registry Authentication"

          # Get registry info
          echo "🔍 Getting registry information..."
          REGISTRY_INFO=$(doctl registry get 2>/dev/null || echo "No registry found")

          if [ "$REGISTRY_INFO" = "No registry found" ]; then
            echo "❌ No registry found. Creating one..."
            doctl registry create qylon --region nyc3
            echo "✅ Registry created successfully!"
            sleep 30  # Wait for registry to be ready
          else
            echo "✅ Registry exists"
          fi

          # Get registry credentials
          echo "🔑 Getting registry credentials..."
          CREDENTIALS=$(doctl registry docker-config 2>/dev/null)

          if [ -n "$CREDENTIALS" ]; then
            echo "✅ Got registry credentials!"
            
            # Extract username and password from docker config
            USERNAME=$(echo "$CREDENTIALS" | grep -o '"username":"[^"]*"' | cut -d'"' -f4)
            PASSWORD=$(echo "$CREDENTIALS" | grep -o '"password":"[^"]*"' | cut -d'"' -f4)
            
            if [ -n "$USERNAME" ] && [ -n "$PASSWORD" ]; then
              echo "🔄 Updating GitHub secrets..."
              gh secret set DO_REGISTRY_USERNAME --body "$USERNAME"
              gh secret set DO_REGISTRY_PASSWORD --body "$PASSWORD"
              echo "✅ GitHub secrets updated!"
            else
              echo "❌ Failed to extract credentials"
              exit 1
            fi
          else
            echo "❌ Failed to get registry credentials"
            exit 1
          fi

      - name: Trigger Deployment
        run: |
          echo "🚀 Triggering deployment..."

          # Check if we have an app
          APPS=$(doctl apps list --format ID,Name --no-header 2>/dev/null)
          if [ -n "$APPS" ]; then
            APP_ID=$(echo "$APPS" | head -n1 | awk '{print $1}')
            echo "📱 Found app ID: $APP_ID"
            
            # Create deployment
            doctl apps create-deployment "$APP_ID" --force-rebuild
            echo "✅ Deployment triggered!"
          else
            echo "❌ No DigitalOcean app found"
            echo "Please create an app first using the manual setup guide"
          fi
