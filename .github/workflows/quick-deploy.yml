name: Quick Production Deployment

on:
  workflow_dispatch:
    inputs:
      skip_tests:
        description: "Skip tests for faster deployment"
        required: false
        default: "false"
        type: boolean

env:
  NODE_VERSION: "20"

jobs:
  # Essential checks only
  essential-checks:
    name: Essential Checks
    runs-on: ubuntu-latest
    timeout-minutes: 10 # Prevent hanging
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Quick lint check
        run: npm run lint -- --max-warnings 0 --quiet
        continue-on-error: true

      - name: TypeScript check
        run: npx tsc --noEmit
        continue-on-error: true

  # Direct deployment to DigitalOcean
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: essential-checks
    timeout-minutes: 15 # Prevent hanging
    environment:
      name: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check DigitalOcean credentials
        run: |
          if [ -z "${{ secrets.DO_ACCESS_TOKEN }}" ] || [ -z "${{ secrets.DO_APP_ID }}" ]; then
            echo "‚ùå DigitalOcean credentials missing"
            exit 1
          fi
          echo "‚úÖ DigitalOcean credentials found"

      - name: Setup DigitalOcean CLI
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_ACCESS_TOKEN }}

      - name: Deploy to DigitalOcean App Platform
        run: |
          echo "üöÄ Deploying to DigitalOcean App Platform..."
          doctl apps create-deployment ${{ secrets.DO_APP_ID }} --force-rebuild

          if [ $? -eq 0 ]; then
            echo "‚úÖ Deployment triggered successfully!"

            # Get app info
            echo "üìä Getting app information..."
            doctl apps get ${{ secrets.DO_APP_ID }} --format "Name,DefaultIngress"

            echo ""
            echo "üîó Monitor deployment at:"
            echo "   DigitalOcean: https://cloud.digitalocean.com/apps"
            echo "   GitHub Actions: https://github.com/KD-Squares/qylon/actions"
          else
            echo "‚ùå Deployment failed"
            exit 1
          fi

      - name: Deployment Status
        run: |
          echo "‚è≥ Waiting 30 seconds for deployment to initialize..."
          sleep 30

          echo "üìä Checking deployment status..."
          doctl apps list-deployments ${{ secrets.DO_APP_ID }} --format "ID,Progress,Status,Created"
