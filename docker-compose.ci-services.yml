version: "3.8"

services:
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=test
      - PORT=3000
      - DATABASE_URL=postgresql://postgres:postgres@localhost:5432/qylon_test
      - REDIS_URL=redis://localhost:6379
      - JWT_SECRET=ci-test-jwt-secret-key-for-testing-only
      - SUPABASE_URL=https://placeholder.supabase.co
      - SUPABASE_SERVICE_ROLE_KEY=placeholder-service-role-key
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  meeting-intelligence:
    build:
      context: ./services/meeting-intelligence
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=test
      - PORT=3003
      - DATABASE_URL=postgresql://postgres:postgres@localhost:5432/qylon_test
      - REDIS_URL=redis://localhost:6379
      - OPENAI_API_KEY=mock-openai-api-key
      - RECALL_AI_API_KEY=mock-recall-ai-api-key
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  integration-management:
    build:
      context: ./services/integration-management
      dockerfile: Dockerfile
    ports:
      - "3006:3006"
    environment:
      - NODE_ENV=test
      - PORT=3006
      - DATABASE_URL=postgresql://postgres:postgres@localhost:5432/qylon_test
      - REDIS_URL=redis://localhost:6379
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3006/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: qylon_test
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
