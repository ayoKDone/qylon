{
  "name": "qylon",
  "version": "1.0.0",
  "description": "Qylon AI Automation Platform",
  "private": true,
  "scripts": {
    "heroku-prebuild": "echo 'Pre-build: Setting up build environment'",
    "build": "npm run build:frontend && npm run build:api-gateway && npm run build:meeting-intelligence && npm run build:workflow-automation && npm run build:integration-management",
    "heroku-postbuild": "echo 'Post-build: All components built successfully'",
    "heroku-cleanup": "echo 'Cleanup: Build artifacts processed'",
    "build:frontend": "cd frontend && npm ci && npm run build",
    "build:api-gateway": "cd services/api-gateway && npm ci && npm run build",
    "build:meeting-intelligence": "cd services/meeting-intelligence && npm ci && npm run build",
    "build:workflow-automation": "cd services/workflow-automation && npm ci && npm run build",
    "build:integration-management": "cd services/integration-management && npm ci && npm run build",
    "start": "npm run start:api-gateway",
    "start:api-gateway": "cd services/api-gateway && npm start",
    "dev": "echo 'Development handled by individual services'",
    "ci:local": "./scripts/local-ci.sh",
    "ci:local:verbose": "./scripts/local-ci.sh --verbose",
    "ci:local:quick": "./scripts/local-ci.sh --skip-tests --skip-build",
    "ci:local:lint-only": "./scripts/local-ci.sh --skip-tests --skip-build --skip-lint=false",
    "ci:local:test-only": "./scripts/local-ci.sh --skip-lint --skip-build",
    "ci:local:qa": "./scripts/local-ci.sh --run-qa-tests",
    "ci:local:full": "./scripts/local-ci.sh",
    "test": "echo 'Running all tests' && npm run test:unit && npm run test:integration && npm run test:e2e",
    "test:unit": "echo 'Running unit tests' && npm run test:unit:api-gateway && npm run test:unit:meeting-intelligence && npm run test:unit:workflow-automation && npm run test:unit:integration-management",
    "test:unit:api-gateway": "cd services/api-gateway && npm test",
    "test:unit:meeting-intelligence": "cd services/meeting-intelligence && npm test",
    "test:unit:workflow-automation": "cd services/workflow-automation && npm test",
    "test:unit:integration-management": "cd services/integration-management && npm test",
    "test:integration": "echo 'Running integration tests' && npm run test:integration:api-gateway && npm run test:integration:meeting-intelligence && npm run test:integration:integration-management",
    "test:integration:coverage": "echo 'Running integration tests with coverage' && jest tests/integration --coverage --coverageDirectory=coverage/integration",
    "test:integration:meeting-intelligence": "cd services/meeting-intelligence && npm run test:integration",
    "test:integration:integration-management": "cd services/integration-management && npm run test:integration",
    "test:integration:api-gateway": "jest tests/integration/api-gateway --testPathPatterns=gateway.test.ts",
    "test:e2e": "echo 'Running E2E tests' && npm run test:e2e:frontend",
    "test:e2e:frontend": "cd frontend && npm run test:e2e",
    "test:performance": "echo 'Running performance tests' && npm run test:performance:all",
    "test:performance:meeting-intelligence": "cd services/meeting-intelligence && npm run test:performance",
    "test:performance:load": "k6 run tests/performance/load/load-test.js",
    "test:performance:stress": "k6 run tests/performance/stress/stress-test.js",
    "test:performance:spike": "k6 run tests/performance/spike/spike-test.js",
    "test:performance:all": "npm run test:performance:load && npm run test:performance:stress && npm run test:performance:spike",
    "test:coverage": "jest --coverage",
    "test:coverage:ci": "jest --coverage --ci --watchAll=false",
    "lint:fix": "eslint . --fix",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "type-check": "tsc --noEmit",
    "lint": "eslint . --ext .ts,.tsx --max-warnings=0"
  },
  "engines": {
    "node": "20.x",
    "npm": ">=9.0.0"
  },
  "devDependencies": {
    "@types/cypress": "^0.1.6",
    "@types/express": "^5.0.3",
    "@types/jest": "^30.0.0",
    "@types/node": "^24.7.2",
    "@typescript-eslint/eslint-plugin": "^8.46.1",
    "@typescript-eslint/parser": "^8.46.1",
    "axios": "^1.12.2",
    "cypress": "^13.17.0",
    "dotenv": "^17.2.3",
    "eslint": "^9.37.0",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-prettier": "^5.2.1",
    "jest": "^30.2.0",
    "jsonwebtoken": "^9.0.2",
    "k6": "^0.0.0",
    "prettier": "^3.6.2",
    "supertest": "^7.1.4",
    "ts-jest": "^29.4.5",
    "typescript": "^5.9.3"
  },
  "cacheDirectories": [
    "frontend/node_modules",
    "services/api-gateway/node_modules",
    "services/meeting-intelligence/node_modules",
    "services/workflow-automation/node_modules",
    "services/integration-management/node_modules"
  ],
  "dependencies": {
    "express": "^5.1.0"
  },
  "lint-staged": {
    "*.{ts,tsx,js,jsx}": [
      "prettier --write",
      "eslint --fix",
      "git add"
    ],
    "*.{json,css,scss,md}": [
      "prettier --write",
      "git add"
    ]
  }
}
